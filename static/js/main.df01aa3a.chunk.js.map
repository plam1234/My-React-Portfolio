{"version":3,"sources":["assets/images/github.png","components/Footers.js","components/Hero.js","components/CardInfo.js","components/Card.js","components/Carousel.js","pages/HomePage.js","components/Content.js","pages/AboutPage.js","pages/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","Jumbotron","title","subTitle","text","CardInfo","style","useSpring","opacity","from","div","href","link","target","rel","noreferrer","Card","onClick","e","click","item","src","imgSrc","alt","selected","Carousel","handleCardClick","id","card","items","state","forEach","setState","makeItems","map","key","github","this","React","Component","HomePage","Content","children","AboutPage","ContactPage","App","headerLinks","path","home","about","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","to","exact","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df01aa3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.c6c5a902.png\";","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction Footer() {\n  return (\n    <footer className=\"mt-5\">\n      <Container fluid={true}>\n        <Row className=\"border-top justify-content-between p-3\">\n          <Col className=\"p-0\" md={3} sm={12}>\n            Peter Lam\n          </Col>\n          <Col className=\"p-0 d-flex justify-content-end\" md={3}>\n            This site was made by Peter Lam.\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction Hero(props) {\n  return (\n    <Jumbotron className=\"bg-transparent Jumbotron-fluid p-0\">\n      <Container fluid={true}>\n        <Row className=\"justify-content-center py-5\">\n          <Col md={8} sm={12}>\n            {props.title && (\n              <h1 className=\"display-1 font-weight-bolder\">{props.title}</h1>\n            )}\n            {props.subTitle && (\n              <h3 className=\"display-4 font-weight-light\">{props.subTitle}</h3>\n            )}\n            {props.text && (\n              <h3 className=\"lead front-weight-light\">{props.text}</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nfunction CardInfo(props) {\n  const style = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  return (\n    <animated.div className=\"g-card-info\" style={style}>\n      <p className=\"g-card-title\">{props.title}</p>\n      <p className=\"g-card-sub-title\">{props.subTitle}</p>\n      <a href={props.link} target=\"_blank\" rel=\"noopener\" noreferrer>\n        View\n      </a>\n    </animated.div>\n  );\n}\n\nexport default CardInfo;\n","import React from \"react\";\n\nimport CardInfo from \"../components/CardInfo\";\n\nfunction Card(props) {\n  return (\n    <div className=\"d-inline-block g-card\">\n      <img\n        className=\"g-card-image\"\n        onClick={(e) => props.click(props.item)}\n        src={props.item.imgSrc}\n        alt={props.item.imgSrc}\n      />\n      {props.item.selected && (\n        <CardInfo\n          title={props.item.title}\n          subTitle={props.item.subTitle}\n          link={props.item.link}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\n\nimport Card from \"../components/Card\";\nimport github from \"../assets/images/github.png\";\nimport Container from \"react-bootstrap/Container\";\n\n//  put new image links here:\n\n// import github from \"../assets/github\";\n// import github from \"../assets/github\";\n\nclass Carousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [\n        {\n          id: 0,\n          title: \"GitHub Repo\",\n          subTitle: \"My GitHub Repo\",\n          imgSrc: github,\n          link: \"https://github.com/plam1234\",\n          selected: false,\n        },\n      ],\n    };\n  }\n\n  handleCardClick = (id, card) => {\n    let items = [...this.state.items];\n\n    items[id].selected = items[id].selected ? false : true;\n\n    items.forEach((item) => {\n      if (item.id !== id) {\n        item.selected = false;\n      }\n    });\n\n    this.setState({\n      items,\n    });\n  };\n\n  makeItems = (items) => {\n    return items.map((item) => {\n      return (\n        <Card\n          item={item}\n          click={(e) => this.handleCardClick(item.id, e)}\n          key={item.id}\n        />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <Container fluid={true}>\n        <Row className=\"justify-content-around\">\n          {this.makeItems(this.state.items)}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\n\nimport Hero from \"../components/Hero\";\nimport Carousel from \"../components/Carousel\";\n\nfunction HomePage(props) {\n  return (\n    <div>\n      <Hero title={props.title} subTitle={props.subTitle} text={props.text} />\n      <Carousel />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction Content(props) {\n  return (\n    <Container fluid={true}>\n      <Row className=\"justify-content-center\">\n        <Col md={8}>\n          {/* anything typed inside this column will be displayed */}\n          {props.children}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Content;\n","import React from \"react\";\nimport Hero from \"../components/Hero\";\nimport Content from \"../components/Content\";\n\nfunction AboutPage(props) {\n  return (\n    <div>\n      <Hero title={props.title} />\n      <Content>\n        <p>\n          Greetings! My name is Peter Lam. I'm a full-stack developer with\n          experience in Java, Node JS, React, Express, MongoDB, MySQL.\n        </p>\n\n        <p>\n          I recently finish attending Columbia University Full-Stack Developer\n          Coding Bootcamp.\n        </p>\n\n        <p>\n          My goal is to obtain as much knowledge about coding as possible! I\n          enjoy coding a lot!\n        </p>\n      </Content>\n    </div>\n  );\n}\n\nexport default AboutPage;\n","import React from \"react\";\nimport Hero from \"../components/Hero\";\nimport Content from \"../components/Content\";\n// import Button from \"react-bootstrap/Button\";\n// import axios from \"axios\";\n\n// import Form from \"react-bootstrap/Form\";\n\nfunction ContactPage(props) {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     name: \"\",\n  //     email: \"\",\n  //     message: \"\",\n  //     disabled: false,\n  //     emailSent: null,\n  //   };\n  // }\n  // handleChange = (event) => {\n  //   const target = event.target;\n  //   const value = target.type === \"checkbox\" ? target.checked : target.value;\n  //   const name = target.name;\n\n  //   this.setState({\n  //     [name]: value,\n  //   });\n  // };\n\n  // handlSubmit = (event) => {\n  //   event.preventDefault();\n  //   this.setState({\n  //     disabled: true,\n  //   });\n\n  //   axios\n  //     .post(\"http://localhost:3030/api/email\", this.state)\n  //     .then((res) => {\n  //       if (res.data.success) {\n  //         this.setState({\n  //           disabled: false,\n  //           emailSent: true,\n  //         });\n  //       } else {\n  //         this.setState({\n  //           disabled: false,\n  //           emailSent: false,\n  //         });\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       this.setState({\n  //         disabled: false,\n  //         emailSent: false,\n  //       });\n  //     });\n  // };\n\n  return (\n    <div>\n      {/* <Hero title={this.props.title} />\n        <Content>\n          <Form onSubmit={this.handlSubmit}>\n            <Form.Group>\n              <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\n              <Form.Control\n                id=\"full-name\"\n                name=\"name\"\n                type=\"text\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label htmlFor=\"email\">Email</Form.Label>\n              <Form.Control\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label htmlFor=\"message\">Message</Form.Label>\n              <Form.Control\n                id=\"message\"\n                name=\"message\"\n                as=\"textarea\"\n                rows=\"5\"\n                value={this.state.message}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Button\n              className=\"d-inline-block\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={this.state.disabled}\n            >\n              Send\n            </Button>\n\n            {this.state.emailSent === true && (\n              <p className=\"d-inline sucess-msg\">Email Sent!</p>\n            )}\n            {this.state.emailSent === false && (\n              <p className=\"d-inline err-msg\">Email has failed Send!</p>\n            )}\n          </Form>\n        </Content> */}\n      <Hero title={props.title} />\n      <Content>\n        <p>Peter Lam</p>\n        <p>Phone: 917-698-6592</p>\n        <p>Email: Piitaa1234@gmail.com </p>\n\n        <p>I will get back to you as soon as possible!</p>\n      </Content>\n    </div>\n  );\n}\n\nexport default ContactPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Navbar\";\nimport \"./App.css\";\n\nimport Footer from \"./components/Footers\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport ContactPage from \"./pages/ContactPage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Peter Lam\",\n      headerLinks: [\n        { title: \"Home\", path: \"/\" },\n        { title: \"About\", path: \"/about\" },\n        { title: \"Contact\", path: \"/contact\" },\n      ],\n      home: {\n        title: \"Full-Stack Developer\",\n        subTitle: \"JavaScript / Node / React / Express / MongoDB / Passport\",\n        text: \"Checkout my Projects below\",\n      },\n      about: {\n        title: \"About me\",\n      },\n      contact: {\n        title: \"Contact Me\",\n      },\n    };\n  }\n  render() {\n    return (\n      <Router>\n        <Container className=\"p-0\" fluid={true}>\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n            <Navbar.Brand>Peter Lam</Navbar.Brand>\n\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n            <Navbar.Collapse id=\"navbar toggle\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"/\">\n                  Home\n                </Link>\n                <Link className=\"nav-link\" to=\"/about\">\n                  About\n                </Link>\n                <Link className=\"nav-link\" to=\"/contact\">\n                  Contact\n                </Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <HomePage\n                title={this.state.home.title}\n                subTitle={this.state.home.subTitle}\n                text={this.state.home.text}\n              />\n            )}\n          />\n          <Route\n            path=\"/about\"\n            render={() => <AboutPage title={this.state.about.title} />}\n          />\n          <Route\n            path=\"/contact\"\n            render={() => <ContactPage title={this.state.contact.title} />}\n          />\n\n          <Footer />\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}